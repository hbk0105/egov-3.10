<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.sample.cntrl.mapper.SampleMapper">

	<sql id="searchBoard">
		<if test="searchType != null and searchType != '' and searchTxt != null and searchTxt != '' ">
			<choose>
				<when test='"title".equalsIgnoreCase(searchType)'>
					AND TITLE LIKE CONCAT('%', #{searchTxt}, '%')
				</when>
				<when test='"content".equalsIgnoreCase(searchType)'>
					AND CONTENT LIKE CONCAT('%', #{searchTxt}, '%')
				</when>
				<when test='"witer".equalsIgnoreCase(searchType)'>
					AND USERNAME = #{USERNAME}
				</when>

				<when test='"all".equalsIgnoreCase(searchType)'>
					AND
					(
						TITLE LIKE CONCAT('%', #{searchTxt}, '%')
					OR
						CONTENT LIKE CONCAT('%', #{searchTxt}, '%')
					OR
						 USERNAME = #{searchTxt}
					)
				</when>

			</choose>
		</if>
	</sql>

	<select id="findByOne" resultType="hashmap" parameterType="hashmap">
	/* SampleMapper - findByOne */
		SELECT
			ID				/* 글 ID */
			, TITLE         /* 글제목 */
			, CONTENT       /* 글 내용 */
			, USER_ID       /* 작성자 ID */
			, CREATED_AT    /* 작성일자 */
			, UPDATED_AT    /* 수정일자 */
			, IS_DELETED    /* 삭제 여부 */
		FROM BOARDS
		WHERE ID = #{id} LIMIT 0,1
	</select>

	<select id="fileList" resultType="hashmap" parameterType="hashmap">
	/* SampleMapper - fileList */
	SELECT
		ID /* 파일 ID */
		 , BOARD_ID  /* 게시글 ID */
		 , FILE_NAME         /* 파일명 */
		 , FILE_SIZE             /* 파일 크기*/
		 , FILE_TYPE             /* 파일 타입*/
		 , ORIGINAL_FILE_NAME    /* 원본 파일명*/
		 , CREATED_AT            /* 업로드 일자*/
		 , IS_DELETED            /* 삭제 여부*/
	FROM BOARD_FILES
	WHERE  BOARD_ID = #{boardId}
	</select>

	<select id="totalCount" resultType="int" parameterType="hashmap">
	/* SampleMapper - totalCount */
	SELECT
		COUNT(*)
	FROM (
		SELECT
			  TITLE         /* 글제목 */
			 , CONTENT       /* 글 내용 */
			 , (SELECT USERNAME FROM USERS U WHERE U.ID = USER_ID) AS USERNAME       /* 작성자 ID */
		FROM BOARDS WHERE IS_DELETED != 1
	) A
	WHERE 1 = 1
	<include refid="searchBoard"></include>
	</select>


	<select id="findAll" resultType="java.util.HashMap" parameterType="hashmap">
	/* SampleMapper - findAll */
		SELECT
			A.*
		FROM (
			SELECT
			    B.*
			FROM (
				SELECT
					ROW_NUMBER() OVER (ORDER BY ID DESC) RNUM
					 , ID				/* 글 ID */
					 , LAG(ID) OVER(ORDER BY ID) AS PREV_ID /* 이전글 ID */
					 , LEAD(ID) OVER(ORDER BY ID) AS NEWXT_ID /* 다음글 ID */
					 , TITLE         /* 글제목 */
					 , CONTENT       /* 글 내용 */
					 , USER_ID       /* 작성자 ID */
					 , (SELECT USERNAME FROM USERS U WHERE U.ID = USER_ID) AS USERNAME       /* 작성자 ID */
					 , DATE_FORMAT(CREATED_AT, '%Y-%m-%d %H:%i:%S') AS CREATED_AT    /* 작성일자 */
					 , DATE_FORMAT(UPDATED_AT, '%Y-%m-%d %H:%i:%S') AS UPDATED_AT    /* 수정일자 */
					 , IS_DELETED    /* 삭제 여부 */
				FROM BOARDS
			) B WHERE IS_DELETED != 1
		<include refid="searchBoard"></include>
		) A LIMIT #{startPage},#{pageSize}
	</select>
	<select id="selectMaxBoardId" resultType="java.lang.Integer">
	/* SampleMapper - selectMaxBoardId */
	SELECT IFNULL(MAX(ID),0)+1 FROM BOARDS
	</select>

	<insert id="save" parameterType="hashmap">
		/* SampleMapper - save */
	INSERT INTO
		BOARDS(ID,TITLE, CONTENT, USER_ID, CREATED_AT)
		VALUES(#{boardId},#{title},#{title},1,SYSDATE() )
	</insert>

	<insert id="fileSave" parameterType="hashmap">
	/* SampleMapper - fileSave */
	INSERT INTO BOARD_FILES
	    (
		 ID
		 , BOARD_ID
		 , FILE_NAME
		 , FILE_PATH
		 , FILE_SIZE
		 , FILE_TYPE
		 , ORIGINAL_FILE_NAME
		 , CREATED_AT
		 , IS_DELETED
		) VALUES (
	    	(SELECT MAX(ID)+1 FROM BOARD_FILES F WHERE F.BOARD_ID = #{boardId})
	    	, #{boardId}
			, #{fileName}
			, #{filePath}
			, #{size}
			, #{mimeType}
			, #{origFilename}
			, SYSDATE()
			, 0
		)

	</insert>

	<update id="update" parameterType="hashmap">
		/* SampleMapper - update */
	<![CDATA[
		UPDATE BOARDS
			SET TITLE = #{title}
				, CONTENT = #{content}
				, UPDATED_AT = SYSDATE()
		WHERE ID = #{id}
	]]>
	</update>

	<update id="delete" parameterType="hashmap">
	/* SampleMapper - delete */
	UPDATE BOARDS
		SET IS_DELETED = 1
	WHERE ID = #{id}
	</update>
	<delete id="deleteFile" parameterType="hashmap">
	/* SampleMapper - deleteFile */
		DELETE FROM BOARD_FILES WHERE ID = #{id} AND BOARD_ID = #{boardId}
	</delete>

	<select id="fileMap" resultType="java.util.HashMap" parameterType="hashmap">
	/* SampleMapper - fileMap */
	SELECT
		ID
		 , BOARD_ID
		 , FILE_NAME
		 , FILE_PATH
		 , FILE_SIZE
		 , FILE_TYPE
		 , ORIGINAL_FILE_NAME
		 , CREATED_AT
		 , IS_DELETED
	FROM BOARD_FILES
	WHERE 1 = 1
	<if test="id != null and id != '' ">
		AND ID = #{id}
	</if>
	<if test="boardId != null and boardId != '' ">
		AND BOARD_ID = #{boardId}
	</if>
	</select>
</mapper>