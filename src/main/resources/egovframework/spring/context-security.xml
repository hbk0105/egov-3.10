<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- https://taetae0079.tistory.com/5?category=790789  -->
	<!-- https://codevang.tistory.com/266?category=857253 -->

	<s:http auto-config="true" use-expressions="true" disable-url-rewriting="true">

		<!-- 정적 리소스는 모두 접근 허용 -->
		<!--
		<s:intercept-url pattern="/resources/**" access="permitAll" />
		<s:intercept-url pattern="/css/**" access="permitAll"  />
		<s:intercept-url pattern="/js/**" access="permitAll" />
		<s:intercept-url pattern="/images/**" access="permitAll"  />
		<s:intercept-url pattern="/common/**" access="permitAll"  />
		-->

		<s:intercept-url pattern="/notifications/**" access="permitAll" />
		<s:intercept-url pattern="/sample/*.do" access="permitAll" />
<!--
		<s:intercept-url pattern="/sample/**" access="authenticated"/>
		<s:intercept-url pattern="/sample/**" method="GET" access="permitAll"/>-->


		<s:intercept-url pattern="/uploadDynamicFiles.do" access="permitAll"/>
		<s:intercept-url pattern="/*file*.do" access="permitAll"/>
		<s:intercept-url pattern="/commonMsgForward.do" access="permitAll"/>


		<s:intercept-url pattern="/dbTest" requires-channel="http" access="permitAll" />
		<!--
			SSL 인증서 필요 하므로 주석
		<s:intercept-url pattern="/egovSampleList*" requires-channel="https" access="permitAll" />
		-->
		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<s:intercept-url pattern="/customLogin.do" access="permitAll" />

		<!-- 관리자페이지는 관리자만 접근 허용 -->
		<s:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/member/**" access="hasRole('ROLE_USER')" />

		<!-- 로그인 설정 -->

		<s:form-login login-page="/customLogin.do"
			login-processing-url="/user/login.do"
			authentication-success-handler-ref="customLoginSuccessHandler"
			authentication-failure-handler-ref="customLoginFailureHandler"
			username-parameter="email" password-parameter="passwd" />

		<!-- 로그아웃 설정 -->
		<s:logout
			logout-url="/logout.do"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="true" />

		<s:port-mappings>
		    <s:port-mapping http="8080" https="8443"/>
		</s:port-mappings>

		<!-- 중복 로그인을 방지하기 위한 설정이다. -->
	  	<s:session-management>
        	<s:concurrency-control max-sessions="1" expired-url="/login_duplicate"/>
        </s:session-management>

		<!-- 권한이 없어서 금지된 URI 접속할 때 보여줄 페이지(403 에러 페이지 대체) -->
		<s:access-denied-handler ref="customAccessDenied"/>

		<!--<s:csrf disabled="true"/>-->

		<s:csrf token-repository-ref="csrfTokenRepository"/>

		<s:csrf request-matcher-ref="csrfRequestMatcher"/>

	</s:http>

	<!-- CSRF 토큰 저장소 설정 -->
	<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<property name="headerName" value="X-CSRF-TOKEN"/>
	</bean>

	<bean id="csrfRequestMatcher" class="org.springframework.security.web.util.matcher.OrRequestMatcher">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
					<constructor-arg value="/"/>
				</bean>
				<!--<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
					<constructor-arg value="/sample/**"/>
				</bean>-->
				<!-- POST, PUT, DELETE 메서드에 대한 CSRF 토큰 검사 -->
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
					<constructor-arg value="/sample/**"/>
				</bean>
				<!-- GET 메서드에 대해 CSRF 토큰 검사 제외 -->
				<bean class="org.springframework.security.web.util.matcher.NegatedRequestMatcher">
					<constructor-arg>
						<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
							<constructor-arg value="/sample/**"/>
							<constructor-arg value="GET"/>
						</bean>
					</constructor-arg>
				</bean>

				<!-- 추가적인 URL 패턴을 여기다 더 추가할 수 있습니다 -->
			</list>
		</constructor-arg>
	</bean>


	<!-- SHA256 적용 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="userDetailsService" class="com.web.user.srvc.UserLoginAuthenticationProvider"/>


	<bean id="customAccessDenied" class="com.stn.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccessHandler" class="com.stn.security.CustomLoginSuccessHandler" />
	<bean id="customLoginFailureHandler" class="com.stn.security.CustomLoginFailureHandler" />


	<s:authentication-manager>
		<s:authentication-provider ref="userDetailsService">
		</s:authentication-provider>
	</s:authentication-manager>

</beans>